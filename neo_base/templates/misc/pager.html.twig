{#
/**
 * @file
 * Default theme implementation to display a pager.
 *
 * Available variables:
 * - heading_id: Pagination heading ID.
 * - pagination_heading_level: The heading level to use for the pager.
 * - items: List of pager items.
 *   The list is keyed by the following elements:
 *   - first: Item for the first page; not present on the first page of results.
 *   - previous: Item for the previous page; not present on the first page
 *     of results.
 *   - next: Item for the next page; not present on the last page of results.
 *   - last: Item for the last page; not present on the last page of results.
 *   - pages: List of pages, keyed by page number.
 *   Sub-sub elements:
 *   items.first, items.previous, items.next, items.last, and each item inside
 *   items.pages contain the following elements:
 *   - href: URL with appropriate query parameters for the item.
 *   - attributes: A keyed list of HTML attributes for the item.
 *   - text: The visible text used for the item link, such as "‹ Previous"
 *     or "Next ›".
 * - current: The page number of the current page.
 * - ellipses: If there are more pages than the quantity allows, then an
 *   ellipsis before or after the listed pages may be present.
 *   - previous: Present if the currently visible list of pages does not start
 *     at the first page.
 *   - next: Present if the visible list of pages ends before the last page.
 *
 * @see template_preprocess_pager()
 *
 * @ingroup themeable
 */
#}
{%
  set infoClasses = [
    'relative',
    'block',
    'text-sm',
    'font-medium',
    'text-base',
    'px-4',
    'py-2',
    'bg-base-50',
    'border-base-200',
    'border',
    'first:rounded-s',
    'last:rounded-e',
    '-my-px',
  ]
%}
{%
  set itemClasses = [
    'transition',
    'hover:bg-base-100',
    'hover:text-base-content-100',
    'focus:ring',
    'focus:ring-primary-600',
    'focus:z-10',
    'focus:text-primary-700',
    'focus:outline-none',
  ]
%}
{% if items %}
  <nav class="pager" role="navigation" aria-labelledby="{{ heading_id }}">
    <{{ pagination_heading_level }} id="{{ heading_id }}" class="visually-hidden">{{ 'Pagination'|t }}</{{ pagination_heading_level }}>
    <div class="pager__items js-pager__items inline-flex -space-x-px">
      {# Print first item if we are not on the first page. #}
      {% if items.first %}
          <a href="{{ items.first.href }}" title="{{ 'Go to first page'|t }}"{{ items.first.attributes.addClass(infoClasses, itemClasses)|without('href', 'title') }}>
            <span class="visually-hidden">{{ 'First page'|t }}</span>
            <span aria-hidden="true">{{ items.first.text|default('« First'|t) }}</span>
          </a>
      {% endif %}
      {# Print previous item if we are not on the first page. #}
      {% if items.previous %}
          <a href="{{ items.previous.href }}" title="{{ 'Go to previous page'|t }}" rel="prev"{{ items.previous.attributes.addClass(infoClasses, itemClasses)|without('href', 'title', 'rel') }}>
            <span class="visually-hidden">{{ 'Previous page'|t }}</span>
            <span aria-hidden="true">{{ items.previous.text|default('‹ Previous'|t) }}</span>
          </a>
      {% endif %}
      {# Add an ellipsis if there are further previous pages. #}
      {% if ellipses.previous %}
        {% set attributes = create_attribute() %}
        <div{{ attributes.addClass(infoClasses, 'pager__item', 'pager__item--ellipsis') }} role="presentation">&hellip;</div>
      {% endif %}
      {# Now generate the actual pager piece. #}
      {% for key, item in items.pages %}
          {% if current == key %}
            {% set title = 'Current page'|t %}
          {% else %}
            {% set title = 'Go to page @key'|t({'@key': key}) %}
          {% endif %}
          <a href="{{ item.href }}" title="{{ title }}"{{ item.attributes.addClass(infoClasses, itemClasses, current == key ? 'bg-primary-200 text-base-700 border-primary-300 z-10' : '')|without('href', 'title') }}>
            <span class="visually-hidden">
              {{ 'Page'|t }}
            </span>
            {{- key -}}
          </a>
      {% endfor %}
      {# Add an ellipsis if there are further next pages. #}
      {% if ellipses.next %}
        {% set attributes = create_attribute() %}
        <div{{ attributes.addClass(infoClasses, 'pager__item', 'pager__item--ellipsis') }} role="presentation">&hellip;</div>
      {% endif %}
      {# Print next item if we are not on the last page. #}
      {% if items.next %}
          <a href="{{ items.next.href }}" title="{{ 'Go to next page'|t }}" rel="next"{{ items.next.attributes.addClass(infoClasses, itemClasses)|without('href', 'title', 'rel') }}>
            <span class="visually-hidden">{{ 'Next page'|t }}</span>
            <span aria-hidden="true">{{ items.next.text|default('Next ›'|t) }}</span>
          </a>
      {% endif %}
      {# Print last item if we are not on the last page. #}
      {% if items.last %}
          <a href="{{ items.last.href }}" title="{{ 'Go to last page'|t }}"{{ items.last.attributes.addClass(infoClasses, itemClasses)|without('href', 'title') }}>
            <span class="visually-hidden">{{ 'Last page'|t }}</span>
            <span aria-hidden="true">{{ items.last.text|default('Last »'|t) }}</span>
          </a>
      {% endif %}
    </div>
  </nav>
{% endif %}
