{"version":3,"file":"tabledrag.js","sources":["../../src/js/tabledrag.js"],"sourcesContent":["/**\n * @file\n * tabledrag.js overrides and functionality extensions.\n */\n\n(($, Drupal) => {\n  /**\n   * Extends core's Tabledrag functionality.\n   *\n   * @type {Drupal~behavior}\n   */\n  Drupal.behaviors.neoTableDrag = {\n    attach(context, settings) {\n      /**\n       * Refactors the table row markup to improve item label text wrapping.\n       *\n       * This addresses an issue specific to item labels that are long enough\n       * to be wrapped to a new line. Without this fix, a new line may start\n       * at the beginning of the table row, instead of the expected behavior of\n       * starting at the x axis of the first line.\n       *\n       * Addressing this issue requires changing the structure of a tabledrag\n       * cell's first row.\n       * @example\n       *   <!-- Default tabledrag structure, which has the wrapping problem. -->\n       *   <tr class=\"draggable\">\n       *     <td>\n       *       <!--\n       *         Indentations are next to each other because they are styled as\n       *         `float: left;`\n       *       -->\n       *       <div class=\"indentation\"></div>\n       *       <div class=\"indentation\"></div>\n       *       <a class=\"tabledrag-handle\"></a>\n       *       <!-- If the text in this link wraps enough times that the element\n       *         is taller than the floated elements preceding it, some lines\n       *         will wrap to the beginning of the row instead of aligning with\n       *         the beginning of the link text.\n       *       -->\n       *       <a class=\"menu-item--link\">A longer label that may require wrapping</a>\n       *     </td>\n       *     <!-- etc. -->\n       *   </tr>\n       * @example\n       * <!-- Claro tabledrag structure, this fixes the wrapping problem. -->\n       *   <tr class=\"draggable\">\n       *     <td class=\"tabledrag-cell\">\n       *       <div class=\"tabledrag-cell-content\">\n       *          <!-- Indentations are next to each other because\n       *            .table-drag-cell-content is styled as `display: table-row;`\n       *            and .table-drag-cell-content > * is styled as\n       *            `display: table-cell;`\n       *          -->\n       *         <div class=\"indentation\"></div>\n       *         <div class=\"indentation\"></div>\n       *         <a class=\"tabledrag-handle\"></a>\n       *         <div class=\"tabledrag-cell-content--item\">\n       *           <!-- Placing the link inside a div styled as\n       *             `display: table-cell;` allows the text to wrap within\n       *             the boundaries of the \"cell\".\n       *           -->\n       *           <a class=\"menu-item--link\">A longer label that may require wrapping</a>\n       *         </div>\n       *      </div>\n       *    </td>\n       *    <!-- additional <td> -->\n       *   </tr>\n       *\n       * @param {number} index\n       *   The index in the loop, as provided by `jQuery.each`.\n       * @param {HTMLElement} row\n       *   A draggable table row.\n       *\n       * @todo this may be removable as part of https://drupal.org/node/3083044\n       */\n      const createItemWrapBoundaries = (row) => {\n        const $row = $(row);\n        const $firstCell = $row\n          .find('td:first-of-type')\n          .eq(0)\n          .wrapInner(Drupal.theme('tableDragCellContentWrapper'))\n          .wrapInner(\n            $(Drupal.theme('tableDragCellItemsWrapper')).addClass(\n              'js-tabledrag-cell-content',\n            ),\n          );\n\n        const $targetElem = $firstCell.find('.js-tabledrag-cell-content');\n\n        // Move handle into the '.js-tabledrag-cell-content' target.\n        $targetElem\n          .eq(0)\n          .find(\n            '> .tabledrag-cell-content--item > .js-tabledrag-handle, > .tabledrag-cell-content--item > .js-indentation',\n          )\n          .prependTo($targetElem);\n      };\n\n      // Find each row in a draggable table and process it with\n      // createItemWrapBoundaries().\n      Object.keys(settings.tableDrag || {}).forEach((base) => {\n        once(\n          'neoTabledrag',\n          $(context)\n            .find(`#${base}`)\n            .find('> tr.draggable, > tbody > tr.draggable'),\n        ).forEach(createItemWrapBoundaries);\n      });\n    },\n  };\n  $.extend(Drupal.tableDrag.prototype.row.prototype, {\n    /**\n     * Add an asterisk or other marker to the changed row.\n     *\n     * @todo this may be removable as part of https://drupal.org/node/3084910\n     */\n    markChanged() {\n      const marker = $(Drupal.theme('tableDragChangedMarker')).addClass(\n        'js-tabledrag-changed-marker',\n      );\n      const cell = $(this.element).find('td:first-of-type');\n      if (cell.find('.js-tabledrag-changed-marker').length === 0) {\n        cell.find('.js-tabledrag-handle').after(marker);\n      }\n      Drupal.tableDrag[this.table.id].changedRowIds.add(this.element.id);\n    },\n\n    /**\n     * Moves added indents into Claro's wrapper element.\n     *\n     * For indents to work properly, they must be inside the wrapper\n     * created by createItemWrapBoundaries(). When an indent is added via\n     * dragging, core's tabledrag functionality does not add it inside the\n     * wrapper. This function fires immediately after an indent is added, which\n     * moves the indent into that wrapper.\n     *\n     * @see Drupal.tableDrag.prototype.row.prototype.indent\n     *\n     * @todo this may be removable as part of https://drupal.org/node/3083044\n     */\n    onIndent() {\n      $(this.table)\n        .find('.tabledrag-cell > .js-indentation')\n        .each((index, indentToMove) => {\n          const $indentToMove = $(indentToMove);\n          const $cellContent = $indentToMove.siblings(\n            '.tabledrag-cell-content',\n          );\n          $indentToMove.prependTo($cellContent);\n        });\n    },\n  });\n\n  $.extend(\n    Drupal.theme,\n    /** @lends Drupal.theme */ {\n      /**\n       * Constructs the table drag changed marker.\n       *\n       * @return {string}\n       *   Markup for the indentation.\n       */\n      tableDragIndentation() {\n        return '<div class=\"js-indentation indentation\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"tree\" width=\"25\" height=\"25\" viewBox=\"0 0 25 25\"><path class=\"tree--item tree--item-child-ltr tree--item-child-last-ltr tree--item-horizontal tree--item-horizontal-right\" d=\"M12,12.5 H25\" stroke=\"#888\"/><path class=\"tree--item tree--item-child-rtl tree--item-child-last-rtl tree--item-horizontal tree--horizontal-left\" d=\"M0,12.5 H13\" stroke=\"#888\"/><path class=\"tree--item tree--item-child-ltr tree--item-child-rtl tree--item-child-last-ltr tree--item-child-last-rtl tree--vertical tree--vertical-top\" d=\"M12.5,12 v-99\" stroke=\"#888\"/><path class=\"tree--item tree--item-child-ltr tree--item-child-rtl tree--vertical tree--vertical-bottom\" d=\"M12.5,12 v99\" stroke=\"#888\"/></svg></div>';\n      },\n\n      /**\n       * Constructs the table drag changed warning.\n       *\n       * @return {string}\n       *   Markup for the warning.\n       */\n      tableDragChangedWarning() {\n        return `<div class=\"tabledrag-changed-warning messages messages--warning\" role=\"alert\">${Drupal.theme(\n          'tableDragChangedMarker',\n        )} ${Drupal.t('You have unsaved changes.')}</div>`;\n      },\n\n      /**\n       * Constructs the table drag handle.\n       *\n       * @return {string}\n       *   A string representing a DOM fragment.\n       */\n      tableDragHandle: () =>\n        `<a href=\"#\" title=\"${Drupal.t(\n          'Drag to re-order',\n        )}\" class=\"tabledrag-handle js-tabledrag-handle\"></a>`,\n\n      /**\n       * The button for toggling table row weight visibility.\n       *\n       * @return {string}\n       *   HTML markup for the weight toggle button and its container.\n       */\n      tableDragToggle: () =>\n        `<div class=\"tabledrag-toggle-weight-wrapper\" data-drupal-selector=\"tabledrag-toggle-weight-wrapper\">\n            <button type=\"button\" class=\"link action-link tabledrag-toggle-weight\" data-drupal-selector=\"tabledrag-toggle-weight\"></button>\n            </div>`,\n\n      /**\n       * Constructs contents of the toggle weight button.\n       *\n       * @param {boolean} show\n       *   If the table weights are currently displayed.\n       *\n       * @return {string}\n       *  HTML markup for the weight toggle button content.\n       */\n      toggleButtonContent: (show) => {\n        const classes = [\n          'action-link',\n          'action-link--extrasmall',\n        ];\n        let text = '';\n        if (show) {\n          classes.push('action-link--icon-hide');\n          text = Drupal.t('Hide row weights');\n        } else {\n          classes.push('action-link--icon-show');\n          text = Drupal.t('Show row weights');\n        }\n        return `<span class=\"${classes.join(' ')}\">${text}</a>`;\n      },\n\n      /**\n       * Constructs the wrapper for the initial content of the drag cell.\n       *\n       * @return {string}\n       *   A string representing a DOM fragment.\n       */\n      tableDragCellContentWrapper() {\n        return '<div class=\"tabledrag-cell-content--item\"></div>';\n      },\n\n      /**\n       * Constructs the wrapper for the whole table drag cell.\n       *\n       * @return {string}\n       *   A string representing a DOM fragment.\n       */\n      tableDragCellItemsWrapper() {\n        return '<div class=\"tabledrag-cell-content\"></div>';\n      },\n    },\n  );\n})(jQuery, Drupal);\n"],"names":["$","Drupal","context","settings","createItemWrapBoundaries","row","$targetElem","base","marker","cell","index","indentToMove","$indentToMove","$cellContent","show","classes","text"],"mappings":"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"}